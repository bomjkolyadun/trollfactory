# Create a GitHub Actions workflow to deploy the bot on every push to the deploy branch
name: Deploy to VPS

on:
  push:
    branches:
      - deploy

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Inject secrets
        run: |
          echo "TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}" >> .env
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env
          echo "TELEGRAM_CHANNEL_ID=${{ secrets.TELEGRAM_CHANNEL_ID }}" >> .env
          echo "ADMIN_USER_ID=${{ secrets.ADMIN_USER_ID }}" >> .env

      - name: Zip project
        run: tar -czvf FabrikaTroliv.tar.gz --warning=no-file-changed --exclude='.git' --exclude='FabrikaTroliv.tar.gz' .

      - name: Deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            pkill -f "python bot.py" || true
            rm -rf /home/${{ secrets.VPS_USER }}/FabrikaTroliv
            mkdir /home/${{ secrets.VPS_USER }}/FabrikaTroliv
            exit
      - name: Upload & Install
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cp /home/${{ secrets.VPS_USER }}/FabrikaTroliv.tar.gz /home/${{ secrets.VPS_USER }}/FabrikaTroliv/
            cd /home/${{ secrets.VPS_USER }}/FabrikaTroliv && tar -xzf FabrikaTroliv.tar.gz
            pip install -r requirements.txt
            nohup python bot.py > bot.log 2>&1 &
          source: "FabrikaTroliv.tar.gz"
          target: "/home/${{ secrets.VPS_USER }}/FabrikaTroliv.tar.gz"
