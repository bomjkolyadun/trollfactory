name: Deploy to VPS

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Docker image tag to deploy'
        required: true
        default: 'latest'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Set environment variables
        run: echo "IMAGE_TAG=${{ github.event.inputs.image_tag }}" >> $GITHUB_ENV

      - name: Deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Create the project directory if it doesn't exist
            mkdir -p ~/fabrika-troliv
            
            # Generate .env file from secrets
            cat > ~/fabrika-troliv/.env << EOF
            TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
            TELEGRAM_CHANNEL_ID=${{ secrets.TELEGRAM_CHANNEL_ID }}
            ADMIN_USER_ID=${{ secrets.ADMIN_USER_ID }}
            EOF
            
            # Check if Docker is installed and install it if needed
            if ! command -v docker &> /dev/null; then
              echo "Docker is not installed. Installing Docker..."
              # Update apt packages
              sudo apt-get update
              
              # Install required packages to use HTTPS repositories
              sudo apt-get install -y \
                  apt-transport-https \
                  ca-certificates \
                  curl \
                  gnupg \
                  lsb-release
              
              # Add Docker's official GPG key
              curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
              
              # Set up the stable repository
              echo \
                "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
                $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
              
              # Update apt packages again and install Docker
              sudo apt-get update
              sudo apt-get install -y docker-ce docker-ce-cli containerd.io
              
              # Add current user to the docker group to avoid using sudo
              sudo usermod -aG docker $USER
              
              echo "Docker has been installed successfully!"
            else
              echo "Docker is already installed!"
            fi
            
            # Stop and remove any running container
            docker stop fabrika-troliv || true
            docker rm fabrika-troliv || true

            # Log in to GitHub Container Registry
            docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}

            # Pull the new image from GitHub Container Registry
            docker pull ghcr.io/${{ github.repository }}/fabrika-troliv:${{ env.IMAGE_TAG }}

            # Run the new container with the .env file
            docker run -d --name fabrika-troliv --env-file ~/fabrika-troliv/.env ghcr.io/${{ github.repository }}/fabrika-troliv:${{ env.IMAGE_TAG }}
